output "cluster_id" {
  description = "EKS cluster ID."
  value       = module.eks.cluster_id
}

output "cluster_endpoint" {
  description = "Endpoint for EKS control plane."
  value       = module.eks.cluster_endpoint
}

output "cluster_oidc_issuer_url" {
  description = "Endpoint for EKS control plane."
  value       = module.eks.cluster_oidc_issuer_url
}

output "cluster_security_group_id" {
  description = "Security group ids attached to the cluster control plane."
  value       = module.eks.cluster_security_group_id
}

output "kubectl_config" {
  description = "kubectl config as generated by the module."
  value       = module.eks.kubeconfig
}

output "config_map_aws_auth" {
  description = "A kubernetes configuration to authenticate to this EKS cluster."
  value       = module.eks.config_map_aws_auth
}

output "region" {
  description = "AWS region"
  value       = var.region
}

output "cluster_name" {
  description = "Kubernetes Cluster Name"
  value       = local.cluster_name
}

output "db_endpoint" {
  value = resource.aws_db_instance.itunes-gr_db.endpoint
}

# output "vpc_id" {
#   value = module.vpc.vpc_id
# }
output "db_subnet_group" {
  value = module.vpc.database_subnet_group_name
}
output "ecr_url" {
  value = resource.aws_ecr_repository.itunes-gr-repo.repository_url
}
output "hosted_zone_arn" {
    value = data.aws_route53_zone.selected.arn
}
# output "account_id" {
#   value = data.aws_caller_identity.current.account_id
# }
# output "end_OIDC_url" {
#   value = split("/",module.eks.cluster_oidc_issuer_url)[4]
# }